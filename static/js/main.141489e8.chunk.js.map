{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentImage","setCurrentImage","carouselSize","currentShift","lastPossibleImage","length","isEnd","isStart","className","style","width","map","image","transform","transition","src","alt","cn","type","onClick","nextImage","handlePrevImage","handleNextImage","App","state","setStep","setFrameSize","setItemWidth","setAnimationDuration","isInfinite","setIsInfinite","value","min","onChange","event","target","max","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.141489e8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImage, setCurrentImage] = useState(1);\n\n  const carouselSize = frameSize * itemWidth;\n  const currentShift = (currentImage - 1) * itemWidth;\n  const lastPossibleImage = images.length - frameSize + 1;\n\n  const isEnd = currentImage === lastPossibleImage;\n  const isStart = currentImage === 1;\n\n  const handleNextImage = () => {\n    if (!isEnd) {\n      const nextImage = currentImage + step;\n\n      setCurrentImage(nextImage > lastPossibleImage\n        ? lastPossibleImage\n        : nextImage);\n    } else if (infinite) {\n      setCurrentImage(1);\n    }\n  };\n\n  const handlePrevImage = () => {\n    if (!isStart) {\n      const nextImage = currentImage - step;\n\n      setCurrentImage(nextImage < 1\n        ? 1\n        : nextImage);\n    } else if (infinite) {\n      setCurrentImage(lastPossibleImage);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          width: `${carouselSize}px`,\n        }}\n      >\n        {images.map(image => (\n          <li\n            key={image}\n            style={{\n              transform: `translateX(-${currentShift}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={image}\n              alt={image}\n              style={{\n                width: `${itemWidth}px`,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n      <div className=\"Carousel__buttons\">\n        <button\n          className={cn(\n            'Carousel__button',\n            { 'Carousel__button--disabled': (isStart && !infinite) },\n          )}\n          type=\"button\"\n          onClick={() => handlePrevImage()}\n        >\n          {'<='}\n        </button>\n        <button\n          className={cn(\n            'Carousel__button',\n            { 'Carousel__button--disabled': (isEnd && !infinite) },\n          )}\n          type=\"button\"\n          onClick={() => handleNextImage()}\n          data-cy=\"next\"\n        >\n          {'=>'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nconst App: React.FC = () => {\n  const state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [isInfinite, setIsInfinite] = useState(false);\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 className='App__title' data-cy='title'>Carousel with {state.images.length} images</h1>\n\n      <div className=\"App__inputs\">\n        <label>\n          Step:\n          <input\n            type=\"number\"\n            value={step}\n            min={1}\n            onChange={(event) => setStep(+event.target.value)}\n          />\n        </label>\n\n        <label>\n          Frame Size:\n          <input\n            type=\"number\"\n            value={frameSize}\n            min={1}\n            max={state.images.length}\n            onChange={(event) => setFrameSize(+event.target.value)}\n          />\n        </label>\n\n        <label>\n          Item Width:\n          <input\n            type=\"number\"\n            value={itemWidth}\n            onChange={(event) => setItemWidth(+event.target.value)}\n          />\n        </label>\n\n        <label>\n          Animation Duration:\n          <input\n            type=\"number\"\n            value={animationDuration}\n            onChange={(event) => setAnimationDuration(+event.target.value)}\n          />\n        </label>\n\n        <label>\n          Infinite:\n          <input\n            type=\"checkbox\"\n            checked={isInfinite}\n            onChange={(event) => setIsInfinite(!!event.target.checked)}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={state.images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={isInfinite}\n      />\n    </div>\n\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}